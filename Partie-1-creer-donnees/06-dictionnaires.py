
# **Enregistrez des donn√©es complexes avec des dictionnaires**


### **Qu‚Äôest-ce qu‚Äôun dictionnaire ?**

"""
    Parfois vous avez besoin de repr√©senter des donn√©es plus complexes que des nombres, des cha√Ænes ou des listes.


    Un dictionnaire est une structure de donn√©es qui enregistre des donn√©es dans des **paires cl√©s-valeurs**. Voici un exemple d‚Äôune cl√© et d‚Äôune valeur :  



"responsable_de_campagne": "Jeanne d'Arc"




    La **cl√©** est   `"responsable_de_campagne"`  et la **valeur** est   `"Jeanne d'Arc"`  .** **

"""
### **Cr√©ez un dictionnaire**


# On peut sauvegarder un dictionnaire comme √ßa :



nouvelle_campagne = {
"responsable_de_campagne": "Jeanne d'Arc",
"nom_de_campagne": "Campagne nous aimons les chiens",
"date_de_d√©but": "01/01/2020",
"influenceurs_importants": ["@MonAmourDeChien", "@MeilleuresFriandisesPourChiens"]
}



"""  Vous pouvez aussi cr√©er un nouveau dictionnaire avec des accolades vides  `{}`  ou la fonction  `dict()`  ,
et avec des paires cl√©s-valeurs comme indiqu√© ci-dessous :

"""

taux_de_conversion = {}
taux_de_conversion['facebook'] = 3.4
taux_de_conversion['instagram'] = 1.2

taux_de_conversion2 = dict()
taux_de_conversion2['facebook'] = 3.4
taux_de_conversion2['instagram'] = 1.2




### **Acc√©dez √† une valeur dans un dictionnaire**


# Pour acc√©der aux diff√©rentes valeurs, vous pouvez utiliser la cl√© pour chacune des paires cl√©s-valeurs.



nouvelle_campagne['responsable_de_campagne']
taux_de_conversion['facebook']




### **R√©alisez des op√©rations courantes avec les dictionnaires**


#### **Ajoutez une paire cl√©-valeur**

"""
    Le code suivant cr√©e un dictionnaire appel√©   `infos_labradoodle`  ,
    et enregistre des informations √† propos du poids et de l‚Äôorigine des labradoodles, un croisement de chiens.

"""

infos_labradoodle = {
   "poids": "13 √† 16 kg",
   "origine": "√âtats-Unis"
}



"""
    Pour ajouter une nouvelle paire cl√©-valeur, comme le nom scientifique du labradoodle, ajoutez simplement :

"""

infos_labradoodle['nom_scientifique'] = "Canis lupus familiaris"



"""
    Maintenant,   `infos_labradoodle`  renvoie :

"""

print(infos_labradoodle)



"""
    Si vous √©crivez   `infos_labradoodle["poids"] = "45 kg"`  , la valeur existante sera √©cras√©e, et le r√©sultat sera donc :

"""

infos_labradoodle["poids"]
"45 kg"




#### **Supprimez une paire cl√©-valeur**

"""
    Pour supprimer une paire cl√©-valeur, vous pouvez utiliser le mot-cl√©  `del`  et la cl√© que vous voulez supprimer, ou encore la m√©thode   `pop`  . Pour supprimer la paire cl√©-valeur  `"origine"`  de la paire  `cl√©-valeur`  , √©crivez :

"""

del infos_labradoodle["origine"]
print(infos_labradoodle)
"""
{ "poids": "13 √† 16 kg",
"nom_scientifique": "Canis lupus familiaris"}

    Certains mots font partie du langage Python, et ne peuvent pas √™tre utilis√©s comme noms de variables. Par exemple, **<code>del</code>  </strong>, <strong><code>if</code>  </strong>et <strong><code>else</code>  </strong>. Ces mots sont connus comme √©tant des <strong>mots r√©serv√©s</strong> ou des <strong>mots-cl√©s</strong>.<strong> </strong>


    Voici encore quelques m√©thodes couramment utilis√©es pour manipuler des dictionnaires :
"""


#### **V√©rifiez l‚Äôexistence d‚Äôune cl√© sp√©cifique**

"""
    Par exemple, si vous voulez voir si la cl√© ¬´ poids ¬ª existe dans votre dictionnaire   `infos_labradoodle`  , √©crivez le code qui suit : 

"""

"poids" in infos_labradoodle
True
"race" in infos_labradoodle
False




### **√Ä vous de jouer ! **

"""
    Maintenant que vous vous √™tes familiaris√© avec quelques op√©rations, [pratiquez la manipulation de dictionnaire](https://replit.com/team/PythonBasics2-5/Enregistrez-des-donnees-avec-dictionnaires-Exercice-1) en utilisant toutes les m√©thodes vues pr√©c√©demment. üòÅ


    Si vous n‚Äôarrivez pas √† acc√©der aux exercices, v√©rifiez que vous avez bien suivi les **[instructions de connexion](https://openclassrooms.com/fr/courses/7168871-apprenez-les-bases-du-langage-python?status=draft)** tout au d√©but du cours. 


### **En r√©sum√©**



* Un **dictionnaire **est un moyen d‚Äôenregistrer des **paires cl√©s-valeurs** qui repr√©sentent un objet plus grand.
* Vous pouvez cr√©er un dictionnaire avec des **accolades `{}`**  , et y mettre toutes les cl√©s-valeurs d√®s le d√©but, ou les ajouter au fur et √† mesure.
* Chaque cl√© dans un dictionnaire doit √™tre **unique.**
"""

### **R√©sum√© de la partie 1**

"""
    F√©licitations ! Vous avez atteint la fin de la partie 1 du cours, et vous pouvez maintenant cr√©er des donn√©es, les blocs de code de base du code Python. Vous avez d√©j√† fait beaucoup !



* Vous avez utilis√© des **variables** pour enregistrer des informations comme **donn√©es** dans le code Python.
* Vous avez utilis√© des **types de donn√©es** pour classer diff√©rents types de donn√©es : les entiers, les virgules flottantes, les cha√Ænes de caract√®res et les bool√©ens.
* Vous avez utilis√© des **listes** et des **tuples** pour enregistrer des donn√©es qui sont li√©es.  
* Vous avez utilis√© des **dictionnaires** pour enregistrer des donn√©es complexes.

    _Vous √™tes bien parti pour devenir d√©veloppeur Python ! Maintenant c‚Äôest le moment de tester vos connaissances sur la cr√©ation de donn√©es dans Python ! Vous allez passer un quiz. _


    _Ensuite, dans la partie 2, vous allez apprendre √† g√©rer la logique du programme._
"""